<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/EWF/OneDrive/Documentos/CABerlin/Project 5/TASK 4/TASK 4.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="742"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE Warehouses (
   Code INTEGER NOT NULL,
   Location VARCHAR(255) NOT NULL ,
   Capacity INTEGER NOT NULL,
   PRIMARY KEY (Code)
 );
CREATE TABLE Boxes (
    Code CHAR(4) NOT NULL,
    Contents VARCHAR(255) NOT NULL ,
    Value REAL NOT NULL ,
    Warehouse INTEGER NOT NULL,
    PRIMARY KEY (Code)
 );
 
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(1,'Chicago',3);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(2,'Chicago',4);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(3,'New York',7);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(4,'Los Angeles',2);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(5,'San Francisco',8);
 
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0MN7','Rocks',180,3);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('4H8P','Rocks',250,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('4RT3','Scissors',190,4);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('7G3H','Rocks',200,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('8JN6','Papers',75,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('8Y6U','Papers',50,3);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('9J6F','Papers',175,2);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('LL08','Rocks',140,4);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('P0H6','Scissors',125,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('P2T6','Scissors',150,2);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('TU55','Papers',90,5);




--3.1 Select all warehouses.

SELECT *
FROM Warehouses;


--3.2 Select all boxes with a value larger than $150.

SELECT *
FROM Boxes 
WHERE value &gt; 150;

--3.3 Select all distinct contents in all the boxes.

SELECT DISTINCT Contents
FROM Boxes;

--3.4 Select the average value of all the boxes.

SELECT avg(Value)
FROM Boxes;

--3.5 Select the warehouse code and the average value of the boxes in each warehouse.

SELECT w.Code, AVG(b.Value) 
FROM Boxes b
JOIN Warehouses w
ON b.Warehouse = w.Code 
GROUP BY b.Warehouse;

--3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.

SELECT w.Code, AVG(b.Value) 
FROM Boxes b
JOIN Warehouses w
ON b.Warehouse = w.Code 
GROUP BY b.Warehouse
HAVING AVG(b.Value) &gt; 150;


--3.7 Select the code of each box, along with the name of the city the box is located in.


SELECT b.Code, w.Location
FROM Boxes b
JOIN Warehouses w
ON b.Warehouse = w.Code;


--3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 

SELECT DISTINCT w.Code, Count(*)
FROM Boxes b
JOIN Warehouses w
ON b.Warehouse = w.Code
GROUP BY w.Code;

--3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).

SELECT DISTINCT w.Code
FROM Boxes b
JOIN Warehouses w
ON b.Warehouse = w.Code
GROUP BY b.Warehouse HAVING Count() &gt; w.Capacity;

--3.10 Select the codes of all the boxes located in Chicago.

SELECT DISTINCT b.Code
FROM Boxes b
JOIN Warehouses w
ON b.Warehouse = w.Code
WHERE Location = 'Chicago';

--3.11 Create a new warehouse in New York with a capacity for 3 boxes.

INSERT INTO Warehouses (Code, Location, Capacity)
VALUES (6, 'New York', 3);

--3.12 Create a new box, with code &quot;H5RT&quot;, containing &quot;Papers&quot; with a value of $200, and located in warehouse 2.

INSERT INTO Boxes (Code, Contents, Value, Warehouse)
VALUES ('H5RT', 'Papers', 200, 2);

--3.13 Reduce the value of all boxes by 15%.

Update Boxes
Set Value = Value * .85;

-- 3.14 Delete all records of boxes from saturated warehouses (no boxes were harmed).

DELETE FROM Boxes 
WHERE Warehouse IN (SELECT Warehouse FROM Boxes GROUP BY Warehouse HAVING COUNT(*) &gt; (SELECT Capacity FROM Warehouses));

--3.15 Remove all boxes with a value lower than $100.

DELETE
FROM Boxes
Where Value &lt; 100;

Select *
FROM Boxes;


-- 3.16 Add Index for column &quot;Warehouse&quot; in table &quot;boxes&quot;

CREATE INDEX warehouse_index 
ON Boxes(Warehouse);

    -- !!!NOTE!!!: index should NOT be used on small tables in practice

-- 3.17 Print all the existing indexes

SELECT *
FROM sqlite_schema 
WHERE type = 'index';

    -- !!!NOTE!!!: index should NOT be used on small tables in practice
	
	
-- 3.18 Remove (drop) the index you added just
    -- !!!NOTE!!!: index should NOT be used on small tables in practice

DROP INDEX warehouse_index;

	</sql><current_tab id="0"/></tab_sql></sqlb_project>
