SQL

		*Epic 1*
Security footage shows that there were 2 witnesses. The first witness lives at the last house on "Northwestern Dr". The second witness, named Annabel, lives somewhere on "Franklin Ave".

I saw the murder happen, and I recognized the killer from my gym when I was working out last week on January the 9th.

Congrats, you found the murderer! But wait, there's more... If you think you're up for a challenge, try querying the interview transcript of the murderer to find the real villain behind this crime. If you feel especially confident in your SQL skills, try to complete this final step with no more than 2 queries. Use this same INSERT statement with your new suspect to check your answer.


I was hired by a woman with a lot of money. I don't know her name but I know she's around 5'5" (65") or 5'7" (67"). She has red hair and she drives a Tesla Model S. I know that she attended the SQL Symphony Concert 3 times in December 2017.




drivers_license
	height
	hair_color
	gender
	car_model
	

facebook_event_checkin
	person_id
	event_name
	date

person
	id
	name

SELECT name,  gender, hair_color, car_model, car_make, event_name, date
FROM person 
JOIN drivers_license
  ON drivers_license.id = person.id
JOIN facebook_event_checkin
  ON facebook_event_checkin.person_id = person.id 
WHERE drivers_license.height BETWEEN 65 AND 67
  AND drivers_license.hair_color = 'red'
  AND drivers_license.car_make = 'Tesla'
  AND drivers_license.car_model = 'Model 3'
  AND facebook_event_checkin.event_name = 'SQL Symphony Concert'
  AND facebook_event_checkin.date BETWEEN 20171201 AND 20171231;



id	age	height	eye_color	hair_color	gender	plate_number	car_make	car_model
202298	68	66	green	red	female	500123	Tesla	Model S
291182	65	66	blue	red	female	08CM64	Tesla	Model S
918773	48	65	black	red	female	917UU3	Tesla	Model S


Miranda Priestly
Regina George
78881

-----------------------------------------------------------------------------

		*EPIC 2*

-- 1.1 Select the names of all the products in the store.

Hard drive
Memory
ZIP drive
Floppy disk
Monitor
DVD drive
CD drive
Printer
Toner cartridge
DVD burner

-- 1.2 Select the names and the prices of all the products in the store.

Name		Price
Hard drive	240
Memory		120
ZIP drive	150
Floppy disk	5
Monitor		240
DVD drive	180
CD drive	90
Printer		270
Toner cartridge	66
DVD burner	180

-- 1.3 Select the name of the products with a price less than or equal to $200.

Name		Price
Memory		120
ZIP drive	150
Floppy disk	5
DVD drive	180
CD drive	90
Toner cartridge	66
DVD burner	180

-- 1.4 Select all the products with a price between $60 and $120.

Name		Price
Memory		120
CD drive	90
Toner cartridge	66

-- 1.5 Select the name and price in cents (i.e., the price must be multiplied by 100).

Name		Cents
Hard drive	24000
Memory		12000
ZIP drive	15000
Floppy disk	500
Monitor		24000
DVD drive	18000
CD drive	9000
Printer		27000
Toner cartridge	6600
DVD burner	18000

-- 1.6 Compute the average price of all the products.

AVG(Price)
154.1

-- 1.7 Compute the average price of all products with manufacturer code equal to 2.

AVG(Price)
150.0

-- 1.8 Compute the number of products with a price larger than or equal to $180.

COUNT(*)
3

-- 1.9 Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name (in ascending order).

Name		Price
Printer		270
Hard drive	240
Monitor		240

Name	Price
Hard drive	240
Monitor		240
Printer		270

-- 1.10 Select all the data from the products, including all the data for each product's manufacturer.

Code	Name		Price	Manufacturer	Code	Name
1	Hard drive	240	5		5	Fujitsu
2	Memory		120	6		6	Winchester
3	ZIP drive	150	4		4	Iomega
4	Floppy disk	5	6		6	Winchester
5	Monitor		240	1		1	Sony
6	DVD drive	180	2		2	Creative Labs
7	CD drive	90	2		2	Creative Labs
8	Printer		270	3		3	Hewlett-Packard
9	Toner cartridge	66	3		3	Hewlett-Packard
10	DVD burner	180	2		2	Creative Labs

-- 1.11 Select the product name, price, and manufacturer name of all the products.

PName		Price	MName
Hard drive	240	Fujitsu
Memory	120	Winchester
ZIP drive	150	Iomega
Floppy disk	5	Winchester
Monitor		240	Sony
DVD drive	180	Creative Labs
CD drive	90	Creative Labs
Printer		270	Hewlett-Packard
Toner cartridge	66	Hewlett-Packard
DVD burner	180	Creative Labs

-- 1.12 Select the average price of each manufacturer's products, showing only the manufacturer's code.

AVG(price)	Manufacturer
240.0		1
150.0		2
168.0		3
150.0		4
240.0		5
62.5		6


-- 1.13 Select the average price of each manufacturer's products, showing the manufacturer's name.

AVG(p.price)	Name
240.0		Sony
150.0		Creative Labs
168.0		Hewlett-Packard
150.0		Iomega
240.0		Fujitsu
62.5		Winchester

-- 1.14 Select the names of manufacturer whose products have an average price larger than or equal to $150.

avg(p.price)	Name
240.0		Sony
180.0		Creative Labs
270.0		Hewlett-Packard
150.0		Iomega
240.0		Fujitsu

-- 1.15 Select the name and price of the cheapest product.

Name		MIN(Price)
Floppy disk	5

-- 1.16 Select the name of each manufacturer along with the name and price of its most expensive product.

max(p.price)	ProductName	ManufacturerName
240		Monitor		Sony
180		DVD drive	Creative Labs
270		Printer		Hewlett-Packard
150		ZIP drive	Iomega
240		Hard drive	Fujitsu
120		Memory		Winchester

-- 1.17 Add a new product: Loudspeakers, $70, manufacturer 2.

INSERT INTO Products (Code, Name, Price, Manufacturer)
VALUES (11, 'Loudspeakers', 70,2);

-- 1.18 Update the name of product 8 to "Laser Printer".

UPDATE Products
SET name = 'Laser Printer'
WHERE name = 'Printer';

-- 1.19 Apply a 10% discount to all products.

UPDATE Products
SET Price = Price*0.9;

-- 1.20 Apply a 10% discount to all products with a price larger than or equal to $120.

UPDATE Products
SET Price = Price * 0.9
WHERE Price >= 120;

















CREATE TABLE IF NOT EXISTS Manufacturers (
  Code INTEGER,
  Name TEXT NOT NULL,
  PRIMARY KEY (Code)
);

CREATE TABLE IF NOT EXISTS Products (
  Code INTEGER,
  Name TEXT NOT NULL,
  Price INTEGER NOT NULL,
  Manufacturer INTEGER NOT NULL,
  PRIMARY KEY (Code)
);

INSERT INTO Manufacturers(Code,Name) VALUES(1,'Sony');
INSERT INTO Manufacturers(Code,Name) VALUES(2,'Creative Labs');
INSERT INTO Manufacturers(Code,Name) VALUES(3,'Hewlett-Packard');
INSERT INTO Manufacturers(Code,Name) VALUES(4,'Iomega');
INSERT INTO Manufacturers(Code,Name) VALUES(5,'Fujitsu');
INSERT INTO Manufacturers(Code,Name) VALUES(6,'Winchester');

INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(1,'Hard drive',240,5);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(2,'Memory',120,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(3,'ZIP drive',150,4);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(4,'Floppy disk',5,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(5,'Monitor',240,1);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(6,'DVD drive',180,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(7,'CD drive',90,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(8,'Printer',270,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(9,'Toner cartridge',66,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(10,'DVD burner',180,2);

-- 1.1
SELECT Name,
FROM Products;
-- 1.2
SELECT Name,Price
FROM Products;
-- 1.3
SELECT Name,Price
FROM Products
WHERE Price <= 200; 
-- 1.4
SELECT Name,Price
FROM Products
WHERE Price BETWEEN 60 and 120;
-- 1.5
SELECT Name, Price * 100 as Cents
FROM Products;
-- 1.6
SELECT AVG(Price)
FROM Products;
-- 1.7
SELECT AVG(Price)
FROM Products
WHERE Manufacturer = 2;
-- 1.8
SELECT COUNT(*) 
FROM Products 
WHERE Price > 180;
--1.9
SELECT Name, Price
FROM Products
WHERE Price > 180
ORDER BY Price DESC;

SELECT Name, Price
FROM Products
WHERE Price > 180
ORDER BY Name ASC;
--1.10
SELECT *
FROM Products p
JOIN Manufacturers m
ON p.Manufacturer = m.Code;
--1.11
SELECT p.Name AS PName, p.Price, m.Name AS MName
FROM Products p
JOIN Manufacturers m
ON p.Manufacturer = m.Code;
--1.12
SELECT AVG(price), Manufacturer
FROM Products
GROUP BY Manufacturer;
--1.13
SELECT AVG(p.price), m.Name
FROM Products p
JOIN Manufacturers m
ON p.Manufacturer = m.Code
GROUP BY Manufacturer;
--1.14
SELECT avg(p.price), m.Name
FROM Products p
JOIN Manufacturers m
ON p.Manufacturer = m.Code
WHERE price >= 150
Group By Manufacturer;
--1.15
Select Name, MIN(Price)
FROM Products;
--1.16
SELECT max(p.price), p.Name AS ProductName,m.Name AS ManufacturerName
FROM Products p
JOIN Manufacturers m
ON p.Manufacturer = m.Code
Group By Manufacturer;
--1.17
INSERT INTO Products (Code, Name, Price, Manufacturer)
VALUES (11, 'Loudspeakers', 70,2);
--1.18
UPDATE Products
SET name = 'Laser Printer'
WHERE name = 'Printer';
--1.19
UPDATE Products
SET Price = Price*0.9;
--1.20
UPDATE Products
SET Price = Price * 0.9
WHERE Price >= 120;
